[project]
name = "app"
version = "0.1.0"
description = "Production-ready FastAPI boilerplate with async SQLAlchemy, Redis, and JWT authentication"
requires-python = ">=3.13,<4.0"
dependencies = [
    # Core
    "fastapi>=0.115.0",
    "uvicorn[standard]>=0.32.0",
    "gunicorn>=23.0.0",
    "python-multipart>=0.0.12",

    # Database
    "sqlalchemy>=2.0.35",
    "asyncpg>=0.30.0",
    "psycopg[binary]>=3.1.0",
    "alembic>=1.14.0",
    "greenlet>=3.1.1",

    # Admin
    "sqladmin>=0.10.0",

    # Validation & Serialization
    "pydantic>=2.10.0",
    "pydantic[email]>=2.10.0",
    "pydantic-settings>=2.6.0",
    "phonenumbers>=8.13.0",

    # Authentication & Security
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-decouple>=3.8",

    # Redis & Caching
    "redis>=5.2.0",
    "hiredis>=3.0.0",

    # HTTP Client
    "httpx>=0.27.2",
    "aiohttp>=3.10.10",

    # Storage & Email
    "minio>=7.2.0",
    "aiosmtplib>=3.0.0",

    # Monitoring & Logging
    "structlog>=24.4.0",
    "python-json-logger>=2.0.7",
    "sentry-sdk>=2.18.0",

    # Utils
    "python-dateutil>=2.9.0",
    "pytz>=2024.2",
    "orjson>=3.10.11",

    # Rate Limiting
    "slowapi>=0.1.9",

    # CORS
    "fastapi-cors>=0.0.6",
]

[tool.coverage.run]
source = ["app"]
omit = [
    "app/tests/*",
    "app/alembic/*",
    "app/statics/*",
    "*/site-packages/*",
    "__init__.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
    "except ImportError:",
    "TYPE_CHECKING",
    "if TYPE_CHECKING:"
]

[tool.coverage.html]
directory = "htmlcov"

[tool.uv]
dev-dependencies = [
    # Testing
    "pytest>=8.3.3",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=5.0.0",
    "pytest-env>=1.1.5",
    "pytest-mock>=3.14.0",
    "httpx>=0.27.2",
    "faker>=30.8.0",
    "factory-boy>=3.3.1",

    # Code Quality
    "mypy>=1.13.0",
    "ruff>=0.7.3",
    "black>=24.10.0",
    "isort>=5.13.2",
    "pre-commit>=4.0.1",

    # Development
    "ipython>=8.29.0",
    "rich>=13.9.3",
    "watchfiles>=0.24.0",
]

[tool.mypy]
strict = true
exclude = ["venv", ".venv", "alembic"]
ignore_missing_imports = true

[tool.ruff]
target-version = "py312"
exclude = ["alembic"]

[tool.ruff.lint]
select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "I", # isort
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "W191", # indentation contains tabs
    "B904", # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = [
    "app/tests",
]
asyncio_default_fixture_loop_scope = "function"
